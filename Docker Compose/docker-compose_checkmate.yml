services:

  server:
    image: ghcr.io/bluewave-labs/checkmate-backend-mono:latest
    restart: always
    ports:
      - "52345:52345"
    volumes:
      - /certs:/certs:ro
    environment:
      - UPTIME_APP_API_BASE_URL=http://192.168.1.166:52345/api/v1
      - UPTIME_APP_CLIENT_HOST=http://192.168.1.166
      - DB_CONNECTION_STRING=mongodb://mongodb:27017/uptime_db
      - CLIENT_HOST=http://192.168.1.166
      - JWT_SECRET=paul1
      - NODE_EXTRA_CA_CERTS=/certs/root_ca.pem
    depends_on:
      - mongodb
    networks:
      - checkmate      
  mongodb:
    image: ghcr.io/bluewave-labs/checkmate-mongo:latest
    restart: always
    command: ["mongod", "--quiet", "--bind_ip_all"]
    volumes:
      - ./mongo/data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    ports:
      - "27017:27017" 
    networks:
      - checkmate

networks:
  checkmate:

services:
  client:
    image: ghcr.io/bluewave-labs/checkmate-client:latest
    restart: always
    environment:
      UPTIME_APP_API_BASE_URL: "http://192.168.1.166:52345/api/v1"
      UPTIME_APP_CLIENT_HOST: "http://checkmate.home.com"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
  server:
    image: ghcr.io/bluewave-labs/checkmate-backend:latest
    restart: always
    ports:
      - "52345:52345"
    volumes:
      - /certs:/certs:ro
    depends_on:
      - mongodb
    environment:
      - DB_CONNECTION_STRING=mongodb://mongodb:27017/uptime_db
      - CLIENT_HOST=http://checkmate.home.com
      - JWT_SECRET=paul1
      - NODE_EXTRA_CA_CERTS=/certs/root_ca.pem
    # volumes:
    # - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - checkmate    
  
  mongodb:
    image: ghcr.io/bluewave-labs/checkmate-mongo:latest
    restart: always
    volumes:
      - /data/compose/mongo/data:/data/db
      - /data/compose/mongo/config:/data/configdb
    command: ["mongod", "--quiet", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - checkmate

networks:
  checkmate:
      