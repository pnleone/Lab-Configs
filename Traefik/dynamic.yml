http:
  routers:
    dashboard-router:
      rule: "Host(`trfk.home.com`)"
      service: api@internal
      entryPoints: [websecure]
      tls: true
      middlewares:
       - authentik

    #authentikop-router:
    #  rule: "Host(`authentik.home.com`) && PathPrefix(`/outpost.goauthentik.io/`)"
    #  priority: 15
    #  service: authentik-service
    #  entryPoints: [websecure]
    #  tls: true

    #authentik-router:
    #  rule: "Host(`authentik.home.com`)"
    #  service: authentik-service
    #  entryPoints: [websecure]
    #  tls: true

    vault-router:
      rule: "Host(`vault.home.com`)"
      service: vault-service
      entryPoints: [websecure]
      tls: true

    portainer-router:
      rule: "Host(`portainer.home.com`)"
      service: portainer-service
      entryPoints: [websecure]
      tls: true

    plex-router:
      rule: "Host(`plex.home.com`)"
      service: plex-service
      entryPoints: [websecure]
      tls: true
      middlewares:
       - authentik

    jellyfin-router:
      rule: "Host(`jellyfin.home.com`)"
      service: jellyfin-service
      entryPoints: [websecure]
      tls: true

    tautulli-router:
      rule: "Host(`tautulli.home.com`)"
      service: tautulli-service
      entryPoints: [websecure]
      tls: true

    pihole-router:
      rule: "Host(`pihole.home.com`)"
      service: pihole-service
      entryPoints: [websecure]
      tls: true
      middlewares:
        - pihole-rewrite
        - authentik

    piholebk-router:
      rule: "Host(`piholebk.home.com`)"
      service: piholebk-service
      entryPoints: [websecure]
      tls: true
      middlewares:
        - pihole-rewrite
        - authentik
    # uptimek-router:
    #   rule: "Host(`uptimek.home.com`)"
    #   service: uptimek-service
    #   entryPoints: [websecure]
    #   tls: true

    pulse-router:
      rule: "Host(`pulse.home.com`)"
      service: pulse-service
      entryPoints: [websecure]
      tls: true
      middlewares:
        - pulse-headers
        - authentik

    pulse-router-auth:
      rule: "Host(`pulse.home.com`) && PathPrefix(`/outpost.goauthentik.io/`)"
      entryPoints: [websecure]
      service: authentik
      tls: true

    splunk-router:
      rule: "Host(`splunk.home.com`)"
      service: splunk-service
      entryPoints: [websecure]
      tls: true

    grafana-router:
      rule: "Host(`grafana.home.com`)"
      service: grafana-service
      entryPoints: [websecure]
      tls: true

    #checkmate-router:
    #  rule: "Host(`checkmate.home.com`)"
    #  service: checkmate-service
    #  entryPoints: [websecure]
    #  tls: true

   #chk-svr-router:
   #   rule: "Host(`chk-svr.home.com`)"
   #   service: chk-svr-service
   #   entryPoints: [web]
   #   tls: false

    vas-router:
      rule: "Host(`vas.home.com`)"
      service: vas-service
      entryPoints: [websecure]
      tls: true

    wud-router:
      rule: "Host(`wud.home.com`)"
      service: wud-service
      entryPoints: [websecure]
      tls: true

    qbt-router:
      rule: "Host(`qbt.home.com`)"
      service: qbt-service
      entryPoints: [websecure]
      tls: true

    n8n-router:
      rule: "Host(`n8n.home.com`)"
      service: n8n-service
      entryPoints: [websecure]
      tls: true

    checkmk-router:
      rule: "Host(`checkmk.home.com`)"
      service: checkmk-service
      entryPoints: [websecure]
      tls: true
      middlewares:
       - authentik
    
    dashbd-router:
      rule: "Host(`dashbd.home.com`)"
      service: dashbd-service
      entryPoints: [websecure]
      tls: true
      middlewares:
       - authentik

  services:
    vault-service:
      loadBalancer:
        serversTransport: vault-tls
        servers:
          - url: "https://192.168.1.4:443"

    portainer-service:
      loadBalancer:
        serversTransport: portainer-tls
        servers:
          - url: "https://192.168.1.126:9443"
        passHostHeader: true
        healthCheck:
          path: "/"
          interval: "30s"

    plex-service:
      loadBalancer:
        serversTransport: plex-tls
        servers:
          - url: "https://192.168.1.136:32400"

    jellyfin-service:
      loadBalancer:
        servers:
          - url: "https://192.168.200.244:8096"

    tautulli-service:
      loadBalancer:
        servers:
          - url: "https://192.168.1.140:8181"

    pihole-service:
      loadBalancer:
        serversTransport: pihole-tls
        servers:
          - url: "http://192.168.1.250"

    piholebk-service:
      loadBalancer:
        serversTransport: piholebk-tls
        servers:
          - url: "http://192.168.1.126/admin/login"

    # uptimek-service:
    #   loadBalancer:
    #     serversTransport: uptimek-tls
    #     servers:
    #       - url: "http://192.168.1.181:3001"

    pulse-service:
      loadBalancer:
        serversTransport: pulse-tls
        servers:
          - url: "http://192.168.1.126:7655"
    #     passHostHeader: true

    splunk-service:
      loadBalancer:
        serversTransport: splunk-tls
        servers:
          - url: "http://192.168.1.109:8000"

    #authentik-service:
    #  loadBalancer:
    #    serversTransport: authentik-tls
    #    servers:
    #      - url: "https://192.168.1.166:9443"

    authentik:
      loadBalancer:
        servers:
          - url: http://authentik_proxy:9000/outpost.goauthentik.io

    grafana-service:
      loadBalancer:
        serversTransport: grafana-tls
        servers:
          - url: "http://192.168.1.246:3000"

    #checkmate-service:
    #  loadBalancer:
    #    serversTransport: checkmate-tls
    #    servers:
    #      - url: "http://192.168.1.126:7000"

    #chk-svr-service:
    #  loadBalancer:
      #  serversTransport: checkmate-tls
    #    servers:
    #      - url: "http://192.168.1.126:52345"

    vas-service:
      loadBalancer:
        serversTransport: vas-tls
        servers:
          - url: "http://192.168.1.166:9392"

    wud-service:
      loadBalancer:
        serversTransport: wud-tls
        servers:
          - url: "http://192.168.1.126:3000"

    n8n-service:
      loadBalancer:
        serversTransport: n8n-tls
        servers:
          - url: "http://192.168.1.166:5678"

    qbt-service:
      loadBalancer:
        serversTransport: qbt-tls
        servers:
          - url: "http://192.168.100.15:9866"

    checkmk-service:
      loadBalancer:
        serversTransport: checkmk-tls
        servers:
          - url: "http://192.168.1.126:5000"

    dashbd-service:
      loadBalancer:
        serversTransport: dashbd-tls
        servers:
          - url: "http://192.168.200.7:7990"

  middlewares:
    dashboard-auth:
       basicAuth:
         users:
           - "admin:$$apr1$$r4U7vCvc$$dbZMEYMYtLPNPVaNYVZ1S0"

    pihole-strip:
      stripPrefix:
        prefixes:
          - /admin
    pihole-rewrite:
      replacePathRegex:
        regex: "^/$"
        replacement: "/admin"

    pulse-headers:
      headers:
        customRequestHeaders:
          Connection: "Upgrade"
          Upgrade: "websocket"


    authentik:
       forwardAuth:
         address: "http://authentik_proxy:9000/outpost.goauthentik.io/auth/traefik"
         trustForwardHeader: true
         authResponseHeadersRegex: "^X-Authentik-"
         authResponseHeaders:
           - X-Authentik-Username
           - X-Authentik-Groups
           - X-Authentik-Entitlements
           - X-Authentik-Email
           - X-Authentik-Name
           - X-Authentik-Uid
           - X-Authentik-Jwt
           - X-Authentik-Meta-Jwks
           - X-Authentik-Meta-Outpost
           - X-Authentik-Meta-Provider
           - X-Authentik-Meta-App
           - X-Authentik-Meta-Version

    pihole-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"

  serversTransports:

    vault-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: vault.home.com

    portainer-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: portainer.home.com

    piholebk-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: piholebk.home.com
      insecureSkipVerify: true

    pihole-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: pihole.home.com
      insecureSkipVerify: true

    plex-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: plex.home.com
      insecureSkipVerify: true

    # uptimek-tls:
    #   rootCAs:
    #     - /certs/root_ca.crt
    #   serverName: uptimek.home.com
    #   insecureSkipVerify: true

    authentik-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: authentik.home.com

    pulse-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: pulse.home.com
      insecureSkipVerify: true

    splunk-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: splunk.home.com
      insecureSkipVerify: true

    grafana-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: grafana.home.com
      insecureSkipVerify: true

    #checkmate-tls:
    #  rootCAs:
    #    - /certs/root_ca.crt
    #  serverName: checkmate.home.com
    #  insecureSkipVerify: true

    vas-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: vas.home.com
      insecureSkipVerify: false

    wud-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: wud.home.com
      insecureSkipVerify: false

    qbt-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: qbt.home.com
      insecureSkipVerify: true

    n8n-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: n8n.home.com
      insecureSkipVerify: true

    checkmk-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: checkmk.home.com
      insecureSkipVerify: true

    dashbd-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: dashbd.home.com
      insecureSkipVerify: true

tls:
  certificates:
    - certFile: /certs/chained_whoami.crt
      keyFile:  /certs/whoami.key
    - certFile: /certs/fullchain_trfk.crt
      keyFile:  /certs/trfk.key
    - certFile: /certs/fullchain_portainer.crt
      keyFile: /certs/portainer.key
    - certFile: /certs/fullchain_vault.crt
      keyFile: /certs/vault.key
    - certFile: /certs/fullchain_pihole.crt
      keyFile: /certs/pihole.key
    - certFile: /certs/fullchain_piholebk.crt
      keyFile: /certs/piholebk.key
    - certFile: /certs/fullchain_plex.crt
      keyFile: /certs/plex.key
    - certFile: /certs/fullchain_uptimek.crt
      keyFile: /certs/uptimek.key
    #- certFile: /certs/fullchain_authentik.crt
    #  keyFile: /certs/authentik.key
    - certFile: /certs/fullchain_pulse.crt
      keyFile: /certs/pulse.key
    - certFile: /certs/fullchain_splunk.crt
      keyFile: /certs/splunk.key
    - certFile: /certs/fullchain_grafana.crt
      keyFile: /certs/grafana.key
    #- certFile: /certs/fullchain_checkmate.crt
    #  keyFile: /certs/checkmate.key
    - certFile: /certs/fullchain_vas.crt
      keyFile: /certs/vas.key
    - certFile: /certs/fullchain_wud.crt
      keyFile: /certs/wud.key
    - certFile: /certs/fullchain_qbt.crt
      keyFile: /certs/qbt.key
    - certFile: /certs/fullchain_n8n.crt
      keyFile: /certs/n8n.key
    - certFile: /certs/fullchain_checkmk.crt
      keyFile: /certs/checkmk.key
    - certFile: /certs/fullchain_dashbd.crt
      keyFile: /certs/dashbd.key

metrics:
  prometheus:
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0