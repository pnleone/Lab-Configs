http:
  routers:
    dashboard-router:
      rule: "Host(`trfk.home.com`)"
      service: api@internal
      entryPoints: [websecure]
      tls: true
#      middlewares:
#       - authentik

    authentikop-router:
      rule: "Host(`authentik.home.com`) && PathPrefix(`/outpost.goauthentik.io/`)"
      priority: 15
      service: authentik-service
      entryPoints: [websecure]
      tls: true

    authentik-router:
      rule: "Host(`authentik.home.com`)"
      service: authentik-service
      entryPoints: [websecure]
      tls: true

    vault-router:
      rule: "Host(`vault.home.com`)"
      service: vault-service
      entryPoints: [websecure]
      tls: true

    portainer-router:
      rule: "Host(`portainer.home.com`)"
      service: portainer-service
      entryPoints: [websecure]
      tls: true

    plex-router:
      rule: "Host(`plex.home.com`)"
      service: plex-service
      entryPoints: [websecure]
      tls: true

    jellyfin-router:
      rule: "Host(`jellyfin.home.com`)"
      service: jellyfin-service
      entryPoints: [websecure]
      tls: true

    tautulli-router:
      rule: "Host(`tautulli.home.com`)"
      service: tautulli-service
      entryPoints: [websecure]
      tls: true

    pihole-router:
      rule: "Host(`pihole.home.com`)"
      service: pihole-service
      entryPoints: [websecure]
      tls: true
      middlewares:
        - pihole-rewrite

    piholebk-router:
      rule: "Host(`piholebk.home.com`)"
      service: piholebk-service
      entryPoints: [websecure]
      tls: true
      middlewares:
        - pihole-rewrite

    # uptimek-router:
    #   rule: "Host(`uptimek.home.com`)"
    #   service: uptimek-service
    #   entryPoints: [websecure]
    #   tls: true

    #wazuh-router:
    #  rule: "Host(`wazuh.home.com`)"
    #  service: wazuh-service
    #  entryPoints: [websecure]
    #  tls: treu

    splunk-router:
      rule: "Host(`splunk.home.com`)"
      service: splunk-service
      entryPoints: [websecure]
      tls: true

    grafana-router:
      rule: "Host(`grafana.home.com`)"
      service: grafana-service
      entryPoints: [websecure]
      tls: true

    checkmate-router:
      rule: "Host(`checkmate.home.com`)"
      service: checkmate-service
      entryPoints: [websecure]
      tls: true

   chk-svr-router:
      rule: "Host(`chk-svr.home.com`)"
      service: chk-svr-service
      entryPoints: [web]
      tls: false

    vas-router:
      rule: "Host(`vas.home.com`)"
      service: vas-service
      entryPoints: [websecure]
      tls: true

  services:
    vault-service:
      loadBalancer:
        serversTransport: vault-tls
        servers:
          - url: "https://192.168.1.4:443"

    portainer-service:
      loadBalancer:
        serversTransport: portainer-tls
        servers:
          - url: "https://192.168.1.126:9443"
        passHostHeader: true
        healthCheck:
          path: "/"
          interval: "30s"

    plex-service:
      loadBalancer:
        serversTransport: plex-tls
        servers:
          - url: "https://192.168.1.136:32400"

    jellyfin-service:
      loadBalancer:
        servers:
          - url: "https://192.168.1.140:8096"

    tautulli-service:
      loadBalancer:
        servers:
          - url: "https://192.168.1.140:8181"

    pihole-service:
      loadBalancer:
        serversTransport: pihole-tls
        servers:
          - url: "http://192.168.1.250"

    piholebk-service:
      loadBalancer:
        serversTransport: piholebk-tls
        servers:
          - url: "http://192.168.1.126/admin/login"

    # uptimek-service:
    #   loadBalancer:
    #     serversTransport: uptimek-tls
    #     servers:
    #       - url: "http://192.168.1.181:3001"

     #wazuh-service:
     #  loadBalancer:
     #    serversTransport: wazuh-tls
     #    servers:
     #      - url: "https://wazuh.home.com/app/login?nextUrl=%2F"
    #     passHostHeader: true

    splunk-service:
      loadBalancer:
        serversTransport: splunk-tls
        servers:
          - url: "http://192.168.1.109:8000"

    authentik-service:
      loadBalancer:
        serversTransport: authentik-tls
        servers:
          - url: "https://192.168.1.166:9443"

    grafana-service:
      loadBalancer:
        serversTransport: grafana-tls
        servers:
          - url: "http://192.168.1.246:3000"

    checkmate-service:
      loadBalancer:
        serversTransport: checkmate-tls
        servers:
          - url: "http://192.168.1.126:7000"

    chk-svr-service:
      loadBalancer:
      #  serversTransport: checkmate-tls
        servers:
          - url: "http://192.168.1.126:52345"

    vas-service:
      loadBalancer:
        serversTransport: vas-tls
        servers:
          - url: "http://192.168.1.166:9392"

  middlewares:
    dashboard-auth:
       basicAuth:
         users:
           - "admin:$$apr1$$r4U7vCvc$$dbZMEYMYtLPNPVaNYVZ1S0"

    pihole-strip:
      stripPrefix:
        prefixes:
          - /admin
    pihole-rewrite:
      replacePathRegex:
        regex: "^/$"
        replacement: "/admin"

    authentik:
       forwardAuth:
         address: "http:///authentik_proxy:9000/outpost.goauthentik.io/auth/traefik"
         trustForwardHeader: true
         authResponseHeadersRegex: "^X-authentik-"
         authResponseHeaders:
           - X-authentik-username
           - X-authentik-groups
           - X-authentik-entitlements
           - X-authentik-email
           - X-authentik-name
           - X-authentik-uid
           - X-authentik-jwt
           - X-authentik-meta-jwks
           - X-authentik-meta-outpost
           - X-authentik-meta-provider
           - X-authentik-meta-app
           - X-authentik-meta-version

    pihole-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"

  serversTransports:

    vault-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: vault.home.com

    portainer-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: portainer.home.com

    piholebk-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: piholebk.home.com
      insecureSkipVerify: true

    pihole-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: pihole.home.com
      insecureSkipVerify: true

    plex-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: plex.home.com
      insecureSkipVerify: true

    # uptimek-tls:
    #   rootCAs:
    #     - /certs/root_ca.crt
    #   serverName: uptimek.home.com
    #   insecureSkipVerify: true

    authentik-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: authentik.home.com

     #wazuh-tls:
     #  rootCAs:
     #    - /certs/root_ca.crt
     #  serverName: wazuh.home.com
     #  insecureSkipVerify: true

    splunk-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: splunk.home.com
      insecureSkipVerify: true

    grafana-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: grafana.home.com
      insecureSkipVerify: true

    checkmate-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: checkmate.home.com
      insecureSkipVerify: true

    vas-tls:
      rootCAs:
        - /certs/root_ca.crt
      serverName: vas.home.com
      insecureSkipVerify: false

tls:
  certificates:
    - certFile: /certs/chained_whoami.crt
      keyFile:  /certs/whoami.key
    - certFile: /certs/fullchain_trfk.crt
      keyFile:  /certs/trfk.key
    - certFile: /certs/fullchain_portainer.crt
      keyFile: /certs/portainer.key
    - certFile: /certs/fullchain_vault.crt
      keyFile: /certs/vault.key
    - certFile: /certs/fullchain_pihole.crt
      keyFile: /certs/pihole.key
    - certFile: /certs/fullchain_piholebk.crt
      keyFile: /certs/piholebk.key
    - certFile: /certs/fullchain_plex.crt
      keyFile: /certs/plex.key
    - certFile: /certs/fullchain_uptimek.crt
      keyFile: /certs/uptimek.key
    - certFile: /certs/fullchain_authentik.crt
      keyFile: /certs/authentik.key
    #- certFile: /certs/fullchain_wazuh.crt
    #  keyFile: /certs/wazuh.key
    - certFile: /certs/fullchain_splunk.crt
      keyFile: /certs/splunk.key
    - certFile: /certs/fullchain_grafana.crt
      keyFile: /certs/grafana.key
    - certFile: /certs/fullchain_checkmate.crt
      keyFile: /certs/checkmate.key
    - certFile: /certs/fullchain_vas.crt
      keyFile: /certs/vas.key

metrics:
  prometheus:
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
