{
  "data": {
    "signature_matches": [
      {
        "id": "0",
        "format": "SIG_FORMAT_CAPA",
        "name": "enumerate PE sections",
        "description": "load-code/pe",
        "authors": [
          "@Ana06",
          "@mr-tz"
        ],
        "match_data": [
          "mnemonic: movzx"
        ],
        "rule_src": "rule:\n  meta:\n    name: enumerate PE sections\n    namespace: load-code/pe\n    authors:\n      - \"@Ana06\"\n      - \"@mr-tz\"\n    scopes:\n      static: function\n      dynamic: unsupported  # requires offset, operand[1].offset, characteristic, mnemonic, basicblock features\n    mbc:\n      - Discovery::Code Discovery::Enumerate PE Sections [B0046.001]\n    references:\n      - https://0x00sec.org/t/reflective-dll-injection/3080\n      - https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection\n    examples:\n      - E4C33AC3638EEF68311F8AC0D72483C7:0x401510\n  features:\n    - and:\n      - os: windows\n      # there should be some complexity to functions like this\n      - count(basic blocks): 3 or more\n      - optional:\n        - offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\n      - instruction:\n        - or:\n          - mnemonic: mov\n          - mnemonic: movzx\n        - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\n      - basic block:\n        - or:\n          - and:\n            - description: IMAGE_FIRST_SECTION(nt_header)\n            - instruction:\n              - or:\n                - mnemonic: add\n                - mnemonic: mov\n                - mnemonic: movzx\n              - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\n            - operand[1].offset: 0x18 = FileHeader.SizeOfOptionalHeader\n          - and:\n            - description: (DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i\n            - number: 0x28 = sizeof(IMAGE_SECTION_HEADER)\n            - or:\n              - and:\n                - arch: i386\n                - operand[1].offset: 0xF8 = sizeof(IMAGE_NT_HEADERS32)\n              - and:\n                - arch: amd64\n                - operand[1].offset: 0x108 = sizeof(IMAGE_NT_HEADERS64)\n      - 2 or more:\n        - operand[1].offset: 0xC = IMAGE_SECTION_HEADER.VirtualAddress\n        - operand[1].offset: 0x14 = IMAGE_SECTION_HEADER.PointerToRawData\n        - operand[1].offset: 0x10 = IMAGE_SECTION_HEADER.SizeOfRawData\n        # there's also offset 0x8 = IMAGE_SECTION_HEADER.Misc.PhysicalAddress, but it's likely too common\n      - not:\n        # non-zeroing XOR was observed in FPs\n        - characteristic: nzxor\n",
        "refs": [
          {
            "ref": "https://0x00sec.org/t/reflective-dll-injection/3080"
          },
          {
            "ref": "https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection"
          }
        ]
      },
      {
        "id": "1",
        "format": "SIG_FORMAT_CAPA",
        "name": "create thread",
        "description": "host-interaction/thread/create",
        "authors": [
          "moritz.raabe@mandiant.com",
          "michael.hunhoff@mandiant.com",
          "joakim@intezer.com",
          "anushka.virgaonkar@mandiant.com"
        ],
        "match_data": [
          "api: CreateThread"
        ],
        "rule_src": "rule:\n  meta:\n    name: create thread\n    namespace: host-interaction/thread/create\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - joakim@intezer.com\n      - anushka.virgaonkar@mandiant.com\n    scopes:\n      static: basic block\n      dynamic: span of calls\n    mbc:\n      - Process::Create Thread [C0038]\n    examples:\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\n  features:\n    - or:\n      - and:\n        - os: windows\n        - or:\n          - api: kernel32.CreateThread\n          - api: _beginthread\n          - api: _beginthreadex\n          - api: PsCreateSystemThread\n          - api: SHCreateThread\n          - api: SHCreateThreadWithHandle\n          - api: kernel32.CreateRemoteThread\n          - api: kernel32.CreateRemoteThreadEx\n          - api: RtlCreateUserThread\n          - api: ntdll.NtCreateThread\n          - api: ntdll.NtCreateThreadEx\n          - api: ntdll.ZwCreateThread\n          - api: ntdll.ZwCreateThreadEx\n      - and:\n        - or:\n          - os: linux\n          - os: android\n        - api: pthread_create\n      - and:\n        - api: System.Threading.Thread::Start\n        - optional:\n          - api: System.Threading.Thread::ctor\n"
      },
      {
        "id": "2",
        "format": "SIG_FORMAT_CAPA",
        "name": "terminate process",
        "description": "host-interaction/process/terminate",
        "authors": [
          "moritz.raabe@mandiant.com",
          "michael.hunhoff@mandiant.com",
          "anushka.virgaonkar@mandiant.com"
        ],
        "match_data": [
          "api: TerminateProcess"
        ],
        "rule_src": "rule:\n  meta:\n    name: terminate process\n    namespace: host-interaction/process/terminate\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scopes:\n      static: function\n      dynamic: span of calls\n    mbc:\n      - Process::Terminate Process [C0018]\n    examples:\n      - C91887D861D9BD4A5872249B641BC9F9:0x401A77\n      - 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307\n  features:\n    - or:\n      - api: System.Diagnostics.Process::Kill\n      - api: System.Diagnostics.Process::WaitForExit\n      - api: System.Diagnostics.Process::WaitForExitAsync\n      - api: System.Environment::Exit\n      - api: System.Windows.Forms.Application::Exit\n      - api: exit\n      - api: Exit\n      - and:\n        - os: linux\n        - api: exit_group\n      - and:\n        - optional:\n          - match: open process\n        - or:\n          - api: kernel32.TerminateProcess\n          - api: ntdll.NtTerminateProcess\n          - api: kernel32.ExitProcess\n"
      },
      {
        "id": "5",
        "format": "SIG_FORMAT_CAPA",
        "name": "write pipe",
        "description": "communication/named-pipe/write",
        "authors": [
          "moritz.raabe@mandiant.com",
          "michael.hunhoff@mandiant.com"
        ],
        "match_data": [
          "connect pipe",
          "api: CreateNamedPipe",
          "api: ConnectNamedPipe"
        ],
        "rule_src": "rule:\n  meta:\n    name: write pipe\n    namespace: communication/named-pipe/write\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: function\n      dynamic: span of calls\n    mbc:\n      - Communication::Interprocess Communication::Write Pipe [C0003.004]\n    examples:\n      - C91887D861D9BD4A5872249B641BC9F9:0x401A77\n  features:\n    - or:\n      - and:\n        - or:\n          - match: create pipe\n          - match: connect pipe\n        - api: kernel32.WriteFile\n      - api: kernel32.TransactNamedPipe\n        description: writes and reads pipe in single operation\n      - api: kernel32.CallNamedPipe\n        description: connects, writes, and reads pipe in single operation\n"
      },
      {
        "id": "6",
        "format": "SIG_FORMAT_CAPA",
        "name": "parse PE header",
        "description": "load-code/pe",
        "authors": [
          "moritz.raabe@mandiant.com"
        ],
        "match_data": [
          "IMAGE_NT_SIGNATURE (PE)",
          "IMAGE_DOS_SIGNATURE (MZ)",
          "mnemonic: cmp"
        ],
        "rule_src": "rule:\n  meta:\n    name: parse PE header\n    namespace: load-code/pe\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: function\n      dynamic: unsupported  # requires mnemonic, operand[1].offset features\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\n  features:\n    - and:\n      - os: windows\n      - and:\n        - mnemonic: cmp\n        - or:\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\n          - and:\n            - number: 0x50\n            - number: 0x45\n        - or:\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\n          - and:\n            - number: 0x4D\n            - number: 0x5A\n        - optional:\n          - and:\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\n            - or:\n              - and:\n                - arch: i386\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n              - and:\n                - arch: amd64\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\n          - basic block:\n            - and:\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\n              - 3 or more:\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\n                - or:\n                  - and:\n                    - arch: i386\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\n                  - and:\n                    - arch: amd64\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\n"
      },
      {
        "id": "7",
        "format": "SIG_FORMAT_CAPA",
        "name": "write file on Windows",
        "description": "host-interaction/file-system/write",
        "authors": [
          "william.ballenthin@mandiant.com",
          "anushka.virgaonkar@mandiant.com"
        ],
        "match_data": [
          "api: fwrite",
          "api: WriteFile",
          "FILE_WRITE_DATA"
        ],
        "rule_src": "rule:\n  meta:\n    name: write file on Windows\n    namespace: host-interaction/file-system/write\n    authors:\n      - william.ballenthin@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scopes:\n      static: function\n      dynamic: call\n    mbc:\n      - File System::Writes File [C0052]\n    examples:\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4\n  features:\n    - or:\n      - and:\n        - os: windows\n        - optional:\n          - basic block:\n            - or:\n              - number: 0x40000000 = GENERIC_WRITE\n              - number: 0x2 = FILE_WRITE_DATA\n              - match: create or open file\n          - call:\n            - or:\n              - number: 0x40000000 = GENERIC_WRITE\n              - number: 0x2 = FILE_WRITE_DATA\n              - match: create or open file\n        - or:\n          - api: kernel32.WriteFile\n          - api: kernel32.WriteFileEx\n          - api: NtWriteFile\n          - api: ZwWriteFile\n          - api: _fwrite\n          - api: fwrite\n      - api: System.IO.File::WriteAllBytes\n      - api: System.IO.File::WriteAllBytesAsync\n      - api: System.IO.File::WriteAllLines\n      - api: System.IO.File::WriteAllLinesAsync\n      - api: System.IO.File::WriteAllText\n      - api: System.IO.File::WriteAllTextAsync\n      - api: System.IO.File::AppendAllLines\n      - api: System.IO.File::AppendAllLinesAsync\n      - api: System.IO.File::AppendAllText\n      - api: System.IO.File::AppendAllTextAsync\n      - api: System.IO.File::AppendText\n      - api: System.IO.FileInfo::AppendText\n"
      },
      {
        "id": "8",
        "format": "SIG_FORMAT_CAPA",
        "name": "read file on Windows",
        "description": "host-interaction/file-system/read",
        "authors": [
          "moritz.raabe@mandiant.com",
          "anushka.virgaonkar@mandiant.com"
        ],
        "match_data": [
          "api: ReadFile",
          "api: CreateFile",
          "GENERIC_READ"
        ],
        "rule_src": "rule:\n  meta:\n    name: read file on Windows\n    namespace: host-interaction/file-system/read\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scopes:\n      static: function\n      dynamic: span of calls\n    mbc:\n      - File System::Read File [C0051]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B\n  features:\n    - or:\n      - and:\n        - os: windows\n        - optional:\n          - and:\n            - number: 0x80000000 = GENERIC_READ\n            - match: create or open file\n        - or:\n          - api: kernel32.ReadFile\n          - api: ReadFileEx\n          - api: NtReadFile\n          - api: ZwReadFile\n          - api: LZRead\n          - api: _read\n          - api: fread\n      - api: System.IO.File::ReadAllBytes\n      - api: System.IO.File::ReadAllBytesAsync\n      - api: System.IO.File::ReadAllLines\n      - api: System.IO.File::ReadAllLinesAsync\n      - api: System.IO.File::ReadAllText\n      - api: System.IO.File::ReadAllTextAsync\n      - api: System.IO.File::ReadLines\n"
      },
      {
        "id": "9",
        "format": "SIG_FORMAT_CAPA",
        "name": "spawn thread to RWX shellcode",
        "description": "load-code/shellcode",
        "authors": [
          "moritz.raabe@mandiant.com"
        ],
        "match_data": [
          "PAGE_EXECUTE_READWRITE",
          "allocate memory",
          "create thread"
        ],
        "rule_src": "rule:\n  meta:\n    name: spawn thread to RWX shellcode\n    namespace: load-code/shellcode\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: function\n      dynamic: span of calls\n    mbc:\n      - Memory::Allocate Memory [C0007]\n      - Process::Create Thread [C0038]\n    examples:\n      - Practical Malware Analysis Lab 19-02.exe_:0x401230\n  features:\n    - and:\n      - match: allocate or change RWX memory\n      - match: create thread\n"
      },
      {
        "id": "11",
        "format": "SIG_FORMAT_CAPA",
        "name": "allocate or change RWX memory",
        "description": "host-interaction/process/inject",
        "authors": [
          "@mr-tz",
          "mehunhoff@google.com"
        ],
        "match_data": [
          "PAGE_EXECUTE_READWRITE",
          "allocate memory",
          "api: VirtualProtect"
        ],
        "rule_src": "rule:\n  meta:\n    name: allocate or change RWX memory\n    namespace: host-interaction/process/inject\n    authors:\n      - \"@mr-tz\"\n      - mehunhoff@google.com\n    scopes:\n      static: basic block\n      dynamic: call\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - or:\n      - basic block:\n        - and:\n          - or:\n            - match: allocate memory\n            - match: change memory protection\n          - or:\n            - number: 0x40 = PAGE_EXECUTE_READWRITE\n            # lea     r9d, [rcx+40h]  ; flProtect\n            # call    cs:VirtualAlloc\n            - instruction:\n              - mnemonic: lea\n              - offset: 0x40 = PAGE_EXECUTE_READWRITE\n      - call:\n        - and:\n          - or:\n            - match: allocate memory\n            - match: change memory protection\n          - number: 0x40 = PAGE_EXECUTE_READWRITE\n"
      },
      {
        "id": "12",
        "format": "SIG_FORMAT_CAPA",
        "name": "connect pipe",
        "description": "communication/named-pipe/connect",
        "authors": [
          "moritz.raabe@mandiant.com",
          "michael.hunhoff@mandiant.com"
        ],
        "match_data": [
          "api: ConnectNamedPipe"
        ],
        "rule_src": "rule:\n  meta:\n    name: connect pipe\n    namespace: communication/named-pipe/connect\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: function\n      dynamic: call\n    mbc:\n      - Communication::Interprocess Communication::Connect Pipe [C0003.002]\n    examples:\n      # Windows msdt.exe\n      - 152d4c9f63efb332ccb134c6953c0104:0x42e400\n  features:\n    - or:\n      - api: kernel32.ConnectNamedPipe\n      - api: kernel32.CallNamedPipe\n        description: connect, read, write from pipe in single operation\n      - api: System.IO.Pipes.NamedPipeClientStream::Connect\n      - api: System.IO.Pipes.NamedPipeClientStream::ConnectAsync\n"
      },
      {
        "id": "16",
        "format": "SIG_FORMAT_CAPA",
        "name": "get thread local storage value",
        "description": "host-interaction/process",
        "authors": [
          "michael.hunhoff@mandiant.com"
        ],
        "match_data": [
          "api: TlsGetValue"
        ],
        "rule_src": "rule:\n  meta:\n    name: get thread local storage value\n    namespace: host-interaction/process\n    authors:\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: function\n      dynamic: call\n  features:\n    - and:\n      - api: kernel32.TlsGetValue\n"
      },
      {
        "id": "17",
        "format": "SIG_FORMAT_CAPA",
        "name": "contain a thread local storage (.tls) section",
        "description": "executable/pe/section/tls",
        "authors": [
          "michael.hunhoff@mandiant.com"
        ],
        "match_data": [
          "section: .tls"
        ],
        "rule_src": "rule:\n  meta:\n    name: contain a thread local storage (.tls) section\n    namespace: executable/pe/section/tls\n    authors:\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: file\n      dynamic: file\n    examples:\n      - Practical Malware Analysis Lab 16-02.exe_\n  features:\n    - section: .tls\n"
      },
      {
        "id": "18",
        "format": "SIG_FORMAT_CAPA",
        "name": "create pipe",
        "description": "communication/named-pipe/create",
        "authors": [
          "moritz.raabe@mandiant.com",
          "michael.hunhoff@mandiant.com"
        ],
        "match_data": [
          "api: CreateNamedPipe"
        ],
        "rule_src": "rule:\n  meta:\n    name: create pipe\n    namespace: communication/named-pipe/create\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: function\n      dynamic: call\n    mbc:\n      - Communication::Interprocess Communication::Create Pipe [C0003.001]\n    examples:\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003a13\n  features:\n    - or:\n      - api: kernel32.CreatePipe\n      - api: kernel32.CreateNamedPipe\n      - api: System.IO.Pipes.AnonymousPipeClientStream::ctor\n      - api: System.IO.Pipes.NamedPipeClientStream::ctor\n      - api: System.IO.Pipes.AnonymousPipeServerStream::ctor\n      - api: System.IO.Pipes.AnonymousPipeServerStreamAcl::Create\n      - api: System.IO.Pipes.NamedPipeServerStream::ctor\n      - api: System.IO.Pipes.NamedPipeServerStreamAcl::Create\n"
      }
    ],
    "mbc": [
      {
        "id": "B0046.001",
        "objective": "Discovery",
        "behavior": "Code Discovery",
        "method": "Enumerate PE Sections",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "0"
          }
        ]
      },
      {
        "id": "C0038",
        "objective": "Process",
        "behavior": "Create Thread",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "1"
          }
        ]
      },
      {
        "id": "C0018",
        "objective": "Process",
        "behavior": "Terminate Process",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "2"
          }
        ]
      },
      {
        "id": "C0003.004",
        "objective": "Communication",
        "behavior": "Interprocess Communication",
        "method": "Write Pipe",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "5"
          }
        ]
      },
      {
        "id": "C0052",
        "objective": "File System",
        "behavior": "Writes File",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "7"
          }
        ]
      },
      {
        "id": "C0051",
        "objective": "File System",
        "behavior": "Read File",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "8"
          }
        ]
      },
      {
        "id": "C0007",
        "objective": "Memory",
        "behavior": "Allocate Memory",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "9"
          }
        ]
      },
      {
        "id": "C0038",
        "objective": "Process",
        "behavior": "Create Thread",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "9"
          }
        ]
      },
      {
        "id": "C0007",
        "objective": "Memory",
        "behavior": "Allocate Memory",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "11"
          }
        ]
      },
      {
        "id": "C0003.002",
        "objective": "Communication",
        "behavior": "Interprocess Communication",
        "method": "Connect Pipe",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "12"
          }
        ]
      },
      {
        "id": "C0003.001",
        "objective": "Communication",
        "behavior": "Interprocess Communication",
        "method": "Create Pipe",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "18"
          }
        ]
      }
    ],
    "mitre_attack_techniques": [
      {
        "id": "T1129",
        "severity": "IMPACT_SEVERITY_INFO",
        "signature_description": "parse PE header",
        "refs": [
          {
            "ref": "#signature_matches",
            "value": "6"
          }
        ]
      }
    ],
    "attack_techniques": {
      "T1129": [
        {
          "severity": "INFO",
          "description": "parse PE header",
          "refs": [
            {
              "ref": "#signature_matches",
              "value": "6"
            }
          ]
        }
      ]
    }
  }
}